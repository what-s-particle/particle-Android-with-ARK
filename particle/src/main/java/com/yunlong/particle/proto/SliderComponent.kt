// Code generated by Wire protocol buffer compiler, do not edit.
// Source: com.yunlong.particle.proto.SliderComponent in generate/particle.proto
package com.yunlong.particle.proto

import android.os.Parcelable
import com.squareup.wire.AndroidMessage
import com.squareup.wire.FieldEncoding
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.ReverseProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import com.squareup.wire.`internal`.sanitize
import kotlin.Any
import kotlin.AssertionError
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.DeprecationLevel
import kotlin.Float
import kotlin.Int
import kotlin.Long
import kotlin.Nothing
import kotlin.String
import kotlin.Unit
import kotlin.jvm.JvmField
import okio.ByteString

/**
 * Slider Element used to create a slider
 */
public class SliderComponent(
  /**
   * Minimum value of the slider
   */
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#FLOAT",
  )
  public val min: Float? = null,
  /**
   * Maximum value of the slider
   */
  @field:WireField(
    tag = 2,
    adapter = "com.squareup.wire.ProtoAdapter#FLOAT",
  )
  public val max: Float? = null,
  /**
   * Default value of the slider
   */
  @field:WireField(
    tag = 3,
    adapter = "com.squareup.wire.ProtoAdapter#FLOAT",
  )
  public val defaultValue: Float? = null,
  /**
   * Current value of the slider
   */
  @field:WireField(
    tag = 4,
    adapter = "com.squareup.wire.ProtoAdapter#FLOAT",
  )
  public val currentValue: Float? = null,
  /**
   * Optional label for the slider
   */
  @field:WireField(
    tag = 5,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
  )
  public val label: String? = null,
  unknownFields: ByteString = ByteString.EMPTY,
) : AndroidMessage<SliderComponent, Nothing>(ADAPTER, unknownFields) {
  @Deprecated(
    message = "Shouldn't be used in Kotlin",
    level = DeprecationLevel.HIDDEN,
  )
  public override fun newBuilder(): Nothing = throw
      AssertionError("Builders are deprecated and only available in a javaInterop build; see https://square.github.io/wire/wire_compiler/#kotlin")

  public override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is SliderComponent) return false
    if (unknownFields != other.unknownFields) return false
    if (min != other.min) return false
    if (max != other.max) return false
    if (defaultValue != other.defaultValue) return false
    if (currentValue != other.currentValue) return false
    if (label != other.label) return false
    return true
  }

  public override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + (min?.hashCode() ?: 0)
      result = result * 37 + (max?.hashCode() ?: 0)
      result = result * 37 + (defaultValue?.hashCode() ?: 0)
      result = result * 37 + (currentValue?.hashCode() ?: 0)
      result = result * 37 + (label?.hashCode() ?: 0)
      super.hashCode = result
    }
    return result
  }

  public override fun toString(): String {
    val result = mutableListOf<String>()
    if (min != null) result += """min=$min"""
    if (max != null) result += """max=$max"""
    if (defaultValue != null) result += """defaultValue=$defaultValue"""
    if (currentValue != null) result += """currentValue=$currentValue"""
    if (label != null) result += """label=${sanitize(label)}"""
    return result.joinToString(prefix = "SliderComponent{", separator = ", ", postfix = "}")
  }

  public fun copy(
    min: Float? = this.min,
    max: Float? = this.max,
    defaultValue: Float? = this.defaultValue,
    currentValue: Float? = this.currentValue,
    label: String? = this.label,
    unknownFields: ByteString = this.unknownFields,
  ): SliderComponent = SliderComponent(min, max, defaultValue, currentValue, label, unknownFields)

  public companion object {
    @JvmField
    public val ADAPTER: ProtoAdapter<SliderComponent> = object : ProtoAdapter<SliderComponent>(
      FieldEncoding.LENGTH_DELIMITED, 
      SliderComponent::class, 
      "type.googleapis.com/com.yunlong.particle.proto.SliderComponent", 
      PROTO_3, 
      null, 
      "generate/particle.proto"
    ) {
      public override fun encodedSize(`value`: SliderComponent): Int {
        var size = value.unknownFields.size
        size += ProtoAdapter.FLOAT.encodedSizeWithTag(1, value.min)
        size += ProtoAdapter.FLOAT.encodedSizeWithTag(2, value.max)
        size += ProtoAdapter.FLOAT.encodedSizeWithTag(3, value.defaultValue)
        size += ProtoAdapter.FLOAT.encodedSizeWithTag(4, value.currentValue)
        size += ProtoAdapter.STRING.encodedSizeWithTag(5, value.label)
        return size
      }

      public override fun encode(writer: ProtoWriter, `value`: SliderComponent): Unit {
        ProtoAdapter.FLOAT.encodeWithTag(writer, 1, value.min)
        ProtoAdapter.FLOAT.encodeWithTag(writer, 2, value.max)
        ProtoAdapter.FLOAT.encodeWithTag(writer, 3, value.defaultValue)
        ProtoAdapter.FLOAT.encodeWithTag(writer, 4, value.currentValue)
        ProtoAdapter.STRING.encodeWithTag(writer, 5, value.label)
        writer.writeBytes(value.unknownFields)
      }

      public override fun encode(writer: ReverseProtoWriter, `value`: SliderComponent): Unit {
        writer.writeBytes(value.unknownFields)
        ProtoAdapter.STRING.encodeWithTag(writer, 5, value.label)
        ProtoAdapter.FLOAT.encodeWithTag(writer, 4, value.currentValue)
        ProtoAdapter.FLOAT.encodeWithTag(writer, 3, value.defaultValue)
        ProtoAdapter.FLOAT.encodeWithTag(writer, 2, value.max)
        ProtoAdapter.FLOAT.encodeWithTag(writer, 1, value.min)
      }

      public override fun decode(reader: ProtoReader): SliderComponent {
        var min: Float? = null
        var max: Float? = null
        var defaultValue: Float? = null
        var currentValue: Float? = null
        var label: String? = null
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> min = ProtoAdapter.FLOAT.decode(reader)
            2 -> max = ProtoAdapter.FLOAT.decode(reader)
            3 -> defaultValue = ProtoAdapter.FLOAT.decode(reader)
            4 -> currentValue = ProtoAdapter.FLOAT.decode(reader)
            5 -> label = ProtoAdapter.STRING.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return SliderComponent(
          min = min,
          max = max,
          defaultValue = defaultValue,
          currentValue = currentValue,
          label = label,
          unknownFields = unknownFields
        )
      }

      public override fun redact(`value`: SliderComponent): SliderComponent = value.copy(
        unknownFields = ByteString.EMPTY
      )
    }

    @JvmField
    public val CREATOR: Parcelable.Creator<SliderComponent> = AndroidMessage.newCreator(ADAPTER)

    private const val serialVersionUID: Long = 0L
  }
}
