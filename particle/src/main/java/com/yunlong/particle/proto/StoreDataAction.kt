// Code generated by Wire protocol buffer compiler, do not edit.
// Source: com.yunlong.particle.proto.StoreDataAction in generate/particle.proto
package com.yunlong.particle.proto

import android.os.Parcelable
import com.squareup.wire.AndroidMessage
import com.squareup.wire.FieldEncoding
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.ReverseProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import com.squareup.wire.`internal`.sanitize
import kotlin.Any
import kotlin.AssertionError
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.DeprecationLevel
import kotlin.Int
import kotlin.Long
import kotlin.Nothing
import kotlin.String
import kotlin.Unit
import kotlin.jvm.JvmField
import okio.ByteString

/**
 * Action to store data
 */
public class StoreDataAction(
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
  )
  public val key: String = "",
  @field:WireField(
    tag = 2,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    declaredName = "value",
  )
  public val value_: String = "",
  unknownFields: ByteString = ByteString.EMPTY,
) : AndroidMessage<StoreDataAction, Nothing>(ADAPTER, unknownFields) {
  @Deprecated(
    message = "Shouldn't be used in Kotlin",
    level = DeprecationLevel.HIDDEN,
  )
  public override fun newBuilder(): Nothing = throw
      AssertionError("Builders are deprecated and only available in a javaInterop build; see https://square.github.io/wire/wire_compiler/#kotlin")

  public override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is StoreDataAction) return false
    if (unknownFields != other.unknownFields) return false
    if (key != other.key) return false
    if (value_ != other.value_) return false
    return true
  }

  public override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + key.hashCode()
      result = result * 37 + value_.hashCode()
      super.hashCode = result
    }
    return result
  }

  public override fun toString(): String {
    val result = mutableListOf<String>()
    result += """key=${sanitize(key)}"""
    result += """value_=${sanitize(value_)}"""
    return result.joinToString(prefix = "StoreDataAction{", separator = ", ", postfix = "}")
  }

  public fun copy(
    key: String = this.key,
    value_: String = this.value_,
    unknownFields: ByteString = this.unknownFields,
  ): StoreDataAction = StoreDataAction(key, value_, unknownFields)

  public companion object {
    @JvmField
    public val ADAPTER: ProtoAdapter<StoreDataAction> = object : ProtoAdapter<StoreDataAction>(
      FieldEncoding.LENGTH_DELIMITED, 
      StoreDataAction::class, 
      "type.googleapis.com/com.yunlong.particle.proto.StoreDataAction", 
      PROTO_3, 
      null, 
      "generate/particle.proto"
    ) {
      public override fun encodedSize(`value`: StoreDataAction): Int {
        var size = value.unknownFields.size
        if (value.key != "") size += ProtoAdapter.STRING.encodedSizeWithTag(1, value.key)
        if (value.value_ != "") size += ProtoAdapter.STRING.encodedSizeWithTag(2, value.value_)
        return size
      }

      public override fun encode(writer: ProtoWriter, `value`: StoreDataAction): Unit {
        if (value.key != "") ProtoAdapter.STRING.encodeWithTag(writer, 1, value.key)
        if (value.value_ != "") ProtoAdapter.STRING.encodeWithTag(writer, 2, value.value_)
        writer.writeBytes(value.unknownFields)
      }

      public override fun encode(writer: ReverseProtoWriter, `value`: StoreDataAction): Unit {
        writer.writeBytes(value.unknownFields)
        if (value.value_ != "") ProtoAdapter.STRING.encodeWithTag(writer, 2, value.value_)
        if (value.key != "") ProtoAdapter.STRING.encodeWithTag(writer, 1, value.key)
      }

      public override fun decode(reader: ProtoReader): StoreDataAction {
        var key: String = ""
        var value_: String = ""
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> key = ProtoAdapter.STRING.decode(reader)
            2 -> value_ = ProtoAdapter.STRING.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return StoreDataAction(
          key = key,
          value_ = value_,
          unknownFields = unknownFields
        )
      }

      public override fun redact(`value`: StoreDataAction): StoreDataAction = value.copy(
        unknownFields = ByteString.EMPTY
      )
    }

    @JvmField
    public val CREATOR: Parcelable.Creator<StoreDataAction> = AndroidMessage.newCreator(ADAPTER)

    private const val serialVersionUID: Long = 0L
  }
}
