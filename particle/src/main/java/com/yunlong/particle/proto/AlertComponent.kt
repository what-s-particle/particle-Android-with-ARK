// Code generated by Wire protocol buffer compiler, do not edit.
// Source: com.yunlong.particle.proto.AlertComponent in generate/particle.proto
package com.yunlong.particle.proto

import android.os.Parcelable
import com.squareup.wire.AndroidMessage
import com.squareup.wire.FieldEncoding
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.ReverseProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import com.squareup.wire.`internal`.sanitize
import kotlin.Any
import kotlin.AssertionError
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.DeprecationLevel
import kotlin.Int
import kotlin.Long
import kotlin.Nothing
import kotlin.String
import kotlin.Unit
import kotlin.jvm.JvmField
import okio.ByteString

/**
 * Alert Element used to create an alert.
 */
public class AlertComponent(
  /**
   * Title of the alert.
   */
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
  )
  public val title: String? = null,
  /**
   * Message to display in the alert.
   */
  @field:WireField(
    tag = 2,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
  )
  public val message: String? = null,
  /**
   * Button to confirm the alert.
   */
  @field:WireField(
    tag = 3,
    adapter = "com.yunlong.particle.proto.Particle#ADAPTER",
  )
  public val confirmButton: Particle? = null,
  /**
   * Button to dismiss the alert.
   */
  @field:WireField(
    tag = 4,
    adapter = "com.yunlong.particle.proto.Particle#ADAPTER",
  )
  public val dismissButton: Particle? = null,
  @field:WireField(
    tag = 5,
    adapter = "com.yunlong.particle.proto.Particle#ADAPTER",
  )
  public val icon: Particle? = null,
  unknownFields: ByteString = ByteString.EMPTY,
) : AndroidMessage<AlertComponent, Nothing>(ADAPTER, unknownFields) {
  @Deprecated(
    message = "Shouldn't be used in Kotlin",
    level = DeprecationLevel.HIDDEN,
  )
  public override fun newBuilder(): Nothing = throw
      AssertionError("Builders are deprecated and only available in a javaInterop build; see https://square.github.io/wire/wire_compiler/#kotlin")

  public override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is AlertComponent) return false
    if (unknownFields != other.unknownFields) return false
    if (title != other.title) return false
    if (message != other.message) return false
    if (confirmButton != other.confirmButton) return false
    if (dismissButton != other.dismissButton) return false
    if (icon != other.icon) return false
    return true
  }

  public override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + (title?.hashCode() ?: 0)
      result = result * 37 + (message?.hashCode() ?: 0)
      result = result * 37 + (confirmButton?.hashCode() ?: 0)
      result = result * 37 + (dismissButton?.hashCode() ?: 0)
      result = result * 37 + (icon?.hashCode() ?: 0)
      super.hashCode = result
    }
    return result
  }

  public override fun toString(): String {
    val result = mutableListOf<String>()
    if (title != null) result += """title=${sanitize(title)}"""
    if (message != null) result += """message=${sanitize(message)}"""
    if (confirmButton != null) result += """confirmButton=$confirmButton"""
    if (dismissButton != null) result += """dismissButton=$dismissButton"""
    if (icon != null) result += """icon=$icon"""
    return result.joinToString(prefix = "AlertComponent{", separator = ", ", postfix = "}")
  }

  public fun copy(
    title: String? = this.title,
    message: String? = this.message,
    confirmButton: Particle? = this.confirmButton,
    dismissButton: Particle? = this.dismissButton,
    icon: Particle? = this.icon,
    unknownFields: ByteString = this.unknownFields,
  ): AlertComponent = AlertComponent(title, message, confirmButton, dismissButton, icon,
      unknownFields)

  public companion object {
    @JvmField
    public val ADAPTER: ProtoAdapter<AlertComponent> = object : ProtoAdapter<AlertComponent>(
      FieldEncoding.LENGTH_DELIMITED, 
      AlertComponent::class, 
      "type.googleapis.com/com.yunlong.particle.proto.AlertComponent", 
      PROTO_3, 
      null, 
      "generate/particle.proto"
    ) {
      public override fun encodedSize(`value`: AlertComponent): Int {
        var size = value.unknownFields.size
        size += ProtoAdapter.STRING.encodedSizeWithTag(1, value.title)
        size += ProtoAdapter.STRING.encodedSizeWithTag(2, value.message)
        size += Particle.ADAPTER.encodedSizeWithTag(3, value.confirmButton)
        size += Particle.ADAPTER.encodedSizeWithTag(4, value.dismissButton)
        size += Particle.ADAPTER.encodedSizeWithTag(5, value.icon)
        return size
      }

      public override fun encode(writer: ProtoWriter, `value`: AlertComponent): Unit {
        ProtoAdapter.STRING.encodeWithTag(writer, 1, value.title)
        ProtoAdapter.STRING.encodeWithTag(writer, 2, value.message)
        Particle.ADAPTER.encodeWithTag(writer, 3, value.confirmButton)
        Particle.ADAPTER.encodeWithTag(writer, 4, value.dismissButton)
        Particle.ADAPTER.encodeWithTag(writer, 5, value.icon)
        writer.writeBytes(value.unknownFields)
      }

      public override fun encode(writer: ReverseProtoWriter, `value`: AlertComponent): Unit {
        writer.writeBytes(value.unknownFields)
        Particle.ADAPTER.encodeWithTag(writer, 5, value.icon)
        Particle.ADAPTER.encodeWithTag(writer, 4, value.dismissButton)
        Particle.ADAPTER.encodeWithTag(writer, 3, value.confirmButton)
        ProtoAdapter.STRING.encodeWithTag(writer, 2, value.message)
        ProtoAdapter.STRING.encodeWithTag(writer, 1, value.title)
      }

      public override fun decode(reader: ProtoReader): AlertComponent {
        var title: String? = null
        var message: String? = null
        var confirmButton: Particle? = null
        var dismissButton: Particle? = null
        var icon: Particle? = null
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> title = ProtoAdapter.STRING.decode(reader)
            2 -> message = ProtoAdapter.STRING.decode(reader)
            3 -> confirmButton = Particle.ADAPTER.decode(reader)
            4 -> dismissButton = Particle.ADAPTER.decode(reader)
            5 -> icon = Particle.ADAPTER.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return AlertComponent(
          title = title,
          message = message,
          confirmButton = confirmButton,
          dismissButton = dismissButton,
          icon = icon,
          unknownFields = unknownFields
        )
      }

      public override fun redact(`value`: AlertComponent): AlertComponent = value.copy(
        confirmButton = value.confirmButton?.let(Particle.ADAPTER::redact),
        dismissButton = value.dismissButton?.let(Particle.ADAPTER::redact),
        icon = value.icon?.let(Particle.ADAPTER::redact),
        unknownFields = ByteString.EMPTY
      )
    }

    @JvmField
    public val CREATOR: Parcelable.Creator<AlertComponent> = AndroidMessage.newCreator(ADAPTER)

    private const val serialVersionUID: Long = 0L
  }
}
