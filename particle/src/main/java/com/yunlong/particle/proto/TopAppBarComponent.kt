// Code generated by Wire protocol buffer compiler, do not edit.
// Source: com.yunlong.particle.proto.TopAppBarComponent in generate/particle.proto
package com.yunlong.particle.proto

import android.os.Parcelable
import com.squareup.wire.AndroidMessage
import com.squareup.wire.FieldEncoding
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.ReverseProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import kotlin.Any
import kotlin.AssertionError
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.DeprecationLevel
import kotlin.Int
import kotlin.Long
import kotlin.Nothing
import kotlin.String
import kotlin.Unit
import kotlin.jvm.JvmField
import okio.ByteString

/**
 * TopBarItem Element used to create an item for a toolbar.
 */
public class TopAppBarComponent(
  /**
   * Text to display for the item.
   */
  @field:WireField(
    tag = 1,
    adapter = "com.yunlong.particle.proto.Particle#ADAPTER",
  )
  public val title: Particle? = null,
  /**
   * Navigation icon to display for the item.
   */
  @field:WireField(
    tag = 2,
    adapter = "com.yunlong.particle.proto.Particle#ADAPTER",
  )
  public val navigationIcon: Particle? = null,
  /**
   * Action icon to display for the item.
   */
  @field:WireField(
    tag = 3,
    adapter = "com.yunlong.particle.proto.Particle#ADAPTER",
  )
  public val actionIcon: Particle? = null,
  unknownFields: ByteString = ByteString.EMPTY,
) : AndroidMessage<TopAppBarComponent, Nothing>(ADAPTER, unknownFields) {
  @Deprecated(
    message = "Shouldn't be used in Kotlin",
    level = DeprecationLevel.HIDDEN,
  )
  public override fun newBuilder(): Nothing = throw
      AssertionError("Builders are deprecated and only available in a javaInterop build; see https://square.github.io/wire/wire_compiler/#kotlin")

  public override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is TopAppBarComponent) return false
    if (unknownFields != other.unknownFields) return false
    if (title != other.title) return false
    if (navigationIcon != other.navigationIcon) return false
    if (actionIcon != other.actionIcon) return false
    return true
  }

  public override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + (title?.hashCode() ?: 0)
      result = result * 37 + (navigationIcon?.hashCode() ?: 0)
      result = result * 37 + (actionIcon?.hashCode() ?: 0)
      super.hashCode = result
    }
    return result
  }

  public override fun toString(): String {
    val result = mutableListOf<String>()
    if (title != null) result += """title=$title"""
    if (navigationIcon != null) result += """navigationIcon=$navigationIcon"""
    if (actionIcon != null) result += """actionIcon=$actionIcon"""
    return result.joinToString(prefix = "TopAppBarComponent{", separator = ", ", postfix = "}")
  }

  public fun copy(
    title: Particle? = this.title,
    navigationIcon: Particle? = this.navigationIcon,
    actionIcon: Particle? = this.actionIcon,
    unknownFields: ByteString = this.unknownFields,
  ): TopAppBarComponent = TopAppBarComponent(title, navigationIcon, actionIcon, unknownFields)

  public companion object {
    @JvmField
    public val ADAPTER: ProtoAdapter<TopAppBarComponent> = object :
        ProtoAdapter<TopAppBarComponent>(
      FieldEncoding.LENGTH_DELIMITED, 
      TopAppBarComponent::class, 
      "type.googleapis.com/com.yunlong.particle.proto.TopAppBarComponent", 
      PROTO_3, 
      null, 
      "generate/particle.proto"
    ) {
      public override fun encodedSize(`value`: TopAppBarComponent): Int {
        var size = value.unknownFields.size
        size += Particle.ADAPTER.encodedSizeWithTag(1, value.title)
        size += Particle.ADAPTER.encodedSizeWithTag(2, value.navigationIcon)
        size += Particle.ADAPTER.encodedSizeWithTag(3, value.actionIcon)
        return size
      }

      public override fun encode(writer: ProtoWriter, `value`: TopAppBarComponent): Unit {
        Particle.ADAPTER.encodeWithTag(writer, 1, value.title)
        Particle.ADAPTER.encodeWithTag(writer, 2, value.navigationIcon)
        Particle.ADAPTER.encodeWithTag(writer, 3, value.actionIcon)
        writer.writeBytes(value.unknownFields)
      }

      public override fun encode(writer: ReverseProtoWriter, `value`: TopAppBarComponent): Unit {
        writer.writeBytes(value.unknownFields)
        Particle.ADAPTER.encodeWithTag(writer, 3, value.actionIcon)
        Particle.ADAPTER.encodeWithTag(writer, 2, value.navigationIcon)
        Particle.ADAPTER.encodeWithTag(writer, 1, value.title)
      }

      public override fun decode(reader: ProtoReader): TopAppBarComponent {
        var title: Particle? = null
        var navigationIcon: Particle? = null
        var actionIcon: Particle? = null
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> title = Particle.ADAPTER.decode(reader)
            2 -> navigationIcon = Particle.ADAPTER.decode(reader)
            3 -> actionIcon = Particle.ADAPTER.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return TopAppBarComponent(
          title = title,
          navigationIcon = navigationIcon,
          actionIcon = actionIcon,
          unknownFields = unknownFields
        )
      }

      public override fun redact(`value`: TopAppBarComponent): TopAppBarComponent = value.copy(
        title = value.title?.let(Particle.ADAPTER::redact),
        navigationIcon = value.navigationIcon?.let(Particle.ADAPTER::redact),
        actionIcon = value.actionIcon?.let(Particle.ADAPTER::redact),
        unknownFields = ByteString.EMPTY
      )
    }

    @JvmField
    public val CREATOR: Parcelable.Creator<TopAppBarComponent> = AndroidMessage.newCreator(ADAPTER)

    private const val serialVersionUID: Long = 0L
  }
}
