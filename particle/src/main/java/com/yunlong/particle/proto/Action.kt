// Code generated by Wire protocol buffer compiler, do not edit.
// Source: com.yunlong.particle.proto.Action in generate/particle.proto
package com.yunlong.particle.proto

import android.os.Parcelable
import com.squareup.wire.AndroidMessage
import com.squareup.wire.FieldEncoding
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.ReverseProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import com.squareup.wire.`internal`.countNonNull
import kotlin.Any
import kotlin.AssertionError
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.DeprecationLevel
import kotlin.Int
import kotlin.Long
import kotlin.Nothing
import kotlin.String
import kotlin.Unit
import kotlin.jvm.JvmField
import okio.ByteString

/**
 *  An action is a specific task or behavior that is triggered by a user interaction,
 *  such as clicking a button or selecting an option from a menu. Actions can include a wide range
 * of behaviors,
 *  from displaying a message or changing the appearance of an interface element, to performing
 * complex operations
 *  such as sending data to a server or initiating a transaction.
 */
public class Action(
  /**
   * Action to define by Particle user
   */
  @field:WireField(
    tag = 1,
    adapter = "com.yunlong.particle.proto.CustomAction#ADAPTER",
    oneofName = "action",
  )
  public val custom: CustomAction? = null,
  /**
   * Action to open a new screen
   */
  @field:WireField(
    tag = 2,
    adapter = "com.yunlong.particle.proto.NavigateToAction#ADAPTER",
    jsonName = "navigateTo",
    oneofName = "action",
  )
  public val navigate_to: NavigateToAction? = null,
  /**
   * Action to open previous screen
   */
  @field:WireField(
    tag = 3,
    adapter = "com.yunlong.particle.proto.NavigateBackAction#ADAPTER",
    jsonName = "navigateBack",
    oneofName = "action",
  )
  public val navigate_back: NavigateBackAction? = null,
  /**
   * Action to show a dialog
   */
  @field:WireField(
    tag = 4,
    adapter = "com.yunlong.particle.proto.ShowDialogAction#ADAPTER",
    jsonName = "showDialog",
    oneofName = "action",
  )
  public val show_dialog: ShowDialogAction? = null,
  /**
   * Action to show a menu
   */
  @field:WireField(
    tag = 5,
    adapter = "com.yunlong.particle.proto.ShowMenuAction#ADAPTER",
    jsonName = "showMenu",
    oneofName = "action",
  )
  public val show_menu: ShowMenuAction? = null,
  /**
   * Action to update the UI modifier
   */
  @field:WireField(
    tag = 6,
    adapter = "com.yunlong.particle.proto.UpdateModifierAction#ADAPTER",
    jsonName = "updateModifier",
    oneofName = "action",
  )
  public val update_modifier: UpdateModifierAction? = null,
  /**
   * Action to store data
   */
  @field:WireField(
    tag = 7,
    adapter = "com.yunlong.particle.proto.StoreDataAction#ADAPTER",
    jsonName = "storeData",
    oneofName = "action",
  )
  public val store_data: StoreDataAction? = null,
  /**
   * Action to send an HTTP request
   */
  @field:WireField(
    tag = 8,
    adapter = "com.yunlong.particle.proto.SendHttpRequestAction#ADAPTER",
    jsonName = "sendHttpRequest",
    oneofName = "action",
  )
  public val send_http_request: SendHttpRequestAction? = null,
  /**
   * Action to open the browser, mailbox, phone, camera, etc.
   */
  @field:WireField(
    tag = 9,
    adapter = "com.yunlong.particle.proto.OpenExternalAppAction#ADAPTER",
    jsonName = "openExternalApp",
    oneofName = "action",
  )
  public val open_external_app: OpenExternalAppAction? = null,
  @field:WireField(
    tag = 10,
    adapter = "com.yunlong.particle.proto.ConditionAction#ADAPTER",
    oneofName = "action",
  )
  public val condition: ConditionAction? = null,
  @field:WireField(
    tag = 11,
    adapter = "com.yunlong.particle.proto.RetrieveDataAction#ADAPTER",
    jsonName = "retrieveData",
    oneofName = "action",
  )
  public val retrieve_data: RetrieveDataAction? = null,
  unknownFields: ByteString = ByteString.EMPTY,
) : AndroidMessage<Action, Nothing>(ADAPTER, unknownFields) {
  init {
    require(countNonNull(custom, navigate_to, navigate_back, show_dialog, show_menu,
        update_modifier, store_data, send_http_request, open_external_app, condition,
        retrieve_data) <= 1) {
      "At most one of custom, navigate_to, navigate_back, show_dialog, show_menu, update_modifier, store_data, send_http_request, open_external_app, condition, retrieve_data may be non-null"
    }
  }

  @Deprecated(
    message = "Shouldn't be used in Kotlin",
    level = DeprecationLevel.HIDDEN,
  )
  public override fun newBuilder(): Nothing = throw
      AssertionError("Builders are deprecated and only available in a javaInterop build; see https://square.github.io/wire/wire_compiler/#kotlin")

  public override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is Action) return false
    if (unknownFields != other.unknownFields) return false
    if (custom != other.custom) return false
    if (navigate_to != other.navigate_to) return false
    if (navigate_back != other.navigate_back) return false
    if (show_dialog != other.show_dialog) return false
    if (show_menu != other.show_menu) return false
    if (update_modifier != other.update_modifier) return false
    if (store_data != other.store_data) return false
    if (send_http_request != other.send_http_request) return false
    if (open_external_app != other.open_external_app) return false
    if (condition != other.condition) return false
    if (retrieve_data != other.retrieve_data) return false
    return true
  }

  public override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + (custom?.hashCode() ?: 0)
      result = result * 37 + (navigate_to?.hashCode() ?: 0)
      result = result * 37 + (navigate_back?.hashCode() ?: 0)
      result = result * 37 + (show_dialog?.hashCode() ?: 0)
      result = result * 37 + (show_menu?.hashCode() ?: 0)
      result = result * 37 + (update_modifier?.hashCode() ?: 0)
      result = result * 37 + (store_data?.hashCode() ?: 0)
      result = result * 37 + (send_http_request?.hashCode() ?: 0)
      result = result * 37 + (open_external_app?.hashCode() ?: 0)
      result = result * 37 + (condition?.hashCode() ?: 0)
      result = result * 37 + (retrieve_data?.hashCode() ?: 0)
      super.hashCode = result
    }
    return result
  }

  public override fun toString(): String {
    val result = mutableListOf<String>()
    if (custom != null) result += """custom=$custom"""
    if (navigate_to != null) result += """navigate_to=$navigate_to"""
    if (navigate_back != null) result += """navigate_back=$navigate_back"""
    if (show_dialog != null) result += """show_dialog=$show_dialog"""
    if (show_menu != null) result += """show_menu=$show_menu"""
    if (update_modifier != null) result += """update_modifier=$update_modifier"""
    if (store_data != null) result += """store_data=$store_data"""
    if (send_http_request != null) result += """send_http_request=$send_http_request"""
    if (open_external_app != null) result += """open_external_app=$open_external_app"""
    if (condition != null) result += """condition=$condition"""
    if (retrieve_data != null) result += """retrieve_data=$retrieve_data"""
    return result.joinToString(prefix = "Action{", separator = ", ", postfix = "}")
  }

  public fun copy(
    custom: CustomAction? = this.custom,
    navigate_to: NavigateToAction? = this.navigate_to,
    navigate_back: NavigateBackAction? = this.navigate_back,
    show_dialog: ShowDialogAction? = this.show_dialog,
    show_menu: ShowMenuAction? = this.show_menu,
    update_modifier: UpdateModifierAction? = this.update_modifier,
    store_data: StoreDataAction? = this.store_data,
    send_http_request: SendHttpRequestAction? = this.send_http_request,
    open_external_app: OpenExternalAppAction? = this.open_external_app,
    condition: ConditionAction? = this.condition,
    retrieve_data: RetrieveDataAction? = this.retrieve_data,
    unknownFields: ByteString = this.unknownFields,
  ): Action = Action(custom, navigate_to, navigate_back, show_dialog, show_menu, update_modifier,
      store_data, send_http_request, open_external_app, condition, retrieve_data, unknownFields)

  public companion object {
    @JvmField
    public val ADAPTER: ProtoAdapter<Action> = object : ProtoAdapter<Action>(
      FieldEncoding.LENGTH_DELIMITED, 
      Action::class, 
      "type.googleapis.com/com.yunlong.particle.proto.Action", 
      PROTO_3, 
      null, 
      "generate/particle.proto"
    ) {
      public override fun encodedSize(`value`: Action): Int {
        var size = value.unknownFields.size
        size += CustomAction.ADAPTER.encodedSizeWithTag(1, value.custom)
        size += NavigateToAction.ADAPTER.encodedSizeWithTag(2, value.navigate_to)
        size += NavigateBackAction.ADAPTER.encodedSizeWithTag(3, value.navigate_back)
        size += ShowDialogAction.ADAPTER.encodedSizeWithTag(4, value.show_dialog)
        size += ShowMenuAction.ADAPTER.encodedSizeWithTag(5, value.show_menu)
        size += UpdateModifierAction.ADAPTER.encodedSizeWithTag(6, value.update_modifier)
        size += StoreDataAction.ADAPTER.encodedSizeWithTag(7, value.store_data)
        size += SendHttpRequestAction.ADAPTER.encodedSizeWithTag(8, value.send_http_request)
        size += OpenExternalAppAction.ADAPTER.encodedSizeWithTag(9, value.open_external_app)
        size += ConditionAction.ADAPTER.encodedSizeWithTag(10, value.condition)
        size += RetrieveDataAction.ADAPTER.encodedSizeWithTag(11, value.retrieve_data)
        return size
      }

      public override fun encode(writer: ProtoWriter, `value`: Action): Unit {
        CustomAction.ADAPTER.encodeWithTag(writer, 1, value.custom)
        NavigateToAction.ADAPTER.encodeWithTag(writer, 2, value.navigate_to)
        NavigateBackAction.ADAPTER.encodeWithTag(writer, 3, value.navigate_back)
        ShowDialogAction.ADAPTER.encodeWithTag(writer, 4, value.show_dialog)
        ShowMenuAction.ADAPTER.encodeWithTag(writer, 5, value.show_menu)
        UpdateModifierAction.ADAPTER.encodeWithTag(writer, 6, value.update_modifier)
        StoreDataAction.ADAPTER.encodeWithTag(writer, 7, value.store_data)
        SendHttpRequestAction.ADAPTER.encodeWithTag(writer, 8, value.send_http_request)
        OpenExternalAppAction.ADAPTER.encodeWithTag(writer, 9, value.open_external_app)
        ConditionAction.ADAPTER.encodeWithTag(writer, 10, value.condition)
        RetrieveDataAction.ADAPTER.encodeWithTag(writer, 11, value.retrieve_data)
        writer.writeBytes(value.unknownFields)
      }

      public override fun encode(writer: ReverseProtoWriter, `value`: Action): Unit {
        writer.writeBytes(value.unknownFields)
        RetrieveDataAction.ADAPTER.encodeWithTag(writer, 11, value.retrieve_data)
        ConditionAction.ADAPTER.encodeWithTag(writer, 10, value.condition)
        OpenExternalAppAction.ADAPTER.encodeWithTag(writer, 9, value.open_external_app)
        SendHttpRequestAction.ADAPTER.encodeWithTag(writer, 8, value.send_http_request)
        StoreDataAction.ADAPTER.encodeWithTag(writer, 7, value.store_data)
        UpdateModifierAction.ADAPTER.encodeWithTag(writer, 6, value.update_modifier)
        ShowMenuAction.ADAPTER.encodeWithTag(writer, 5, value.show_menu)
        ShowDialogAction.ADAPTER.encodeWithTag(writer, 4, value.show_dialog)
        NavigateBackAction.ADAPTER.encodeWithTag(writer, 3, value.navigate_back)
        NavigateToAction.ADAPTER.encodeWithTag(writer, 2, value.navigate_to)
        CustomAction.ADAPTER.encodeWithTag(writer, 1, value.custom)
      }

      public override fun decode(reader: ProtoReader): Action {
        var custom: CustomAction? = null
        var navigate_to: NavigateToAction? = null
        var navigate_back: NavigateBackAction? = null
        var show_dialog: ShowDialogAction? = null
        var show_menu: ShowMenuAction? = null
        var update_modifier: UpdateModifierAction? = null
        var store_data: StoreDataAction? = null
        var send_http_request: SendHttpRequestAction? = null
        var open_external_app: OpenExternalAppAction? = null
        var condition: ConditionAction? = null
        var retrieve_data: RetrieveDataAction? = null
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> custom = CustomAction.ADAPTER.decode(reader)
            2 -> navigate_to = NavigateToAction.ADAPTER.decode(reader)
            3 -> navigate_back = NavigateBackAction.ADAPTER.decode(reader)
            4 -> show_dialog = ShowDialogAction.ADAPTER.decode(reader)
            5 -> show_menu = ShowMenuAction.ADAPTER.decode(reader)
            6 -> update_modifier = UpdateModifierAction.ADAPTER.decode(reader)
            7 -> store_data = StoreDataAction.ADAPTER.decode(reader)
            8 -> send_http_request = SendHttpRequestAction.ADAPTER.decode(reader)
            9 -> open_external_app = OpenExternalAppAction.ADAPTER.decode(reader)
            10 -> condition = ConditionAction.ADAPTER.decode(reader)
            11 -> retrieve_data = RetrieveDataAction.ADAPTER.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return Action(
          custom = custom,
          navigate_to = navigate_to,
          navigate_back = navigate_back,
          show_dialog = show_dialog,
          show_menu = show_menu,
          update_modifier = update_modifier,
          store_data = store_data,
          send_http_request = send_http_request,
          open_external_app = open_external_app,
          condition = condition,
          retrieve_data = retrieve_data,
          unknownFields = unknownFields
        )
      }

      public override fun redact(`value`: Action): Action = value.copy(
        custom = value.custom?.let(CustomAction.ADAPTER::redact),
        navigate_to = value.navigate_to?.let(NavigateToAction.ADAPTER::redact),
        navigate_back = value.navigate_back?.let(NavigateBackAction.ADAPTER::redact),
        show_dialog = value.show_dialog?.let(ShowDialogAction.ADAPTER::redact),
        show_menu = value.show_menu?.let(ShowMenuAction.ADAPTER::redact),
        update_modifier = value.update_modifier?.let(UpdateModifierAction.ADAPTER::redact),
        store_data = value.store_data?.let(StoreDataAction.ADAPTER::redact),
        send_http_request = value.send_http_request?.let(SendHttpRequestAction.ADAPTER::redact),
        open_external_app = value.open_external_app?.let(OpenExternalAppAction.ADAPTER::redact),
        condition = value.condition?.let(ConditionAction.ADAPTER::redact),
        retrieve_data = value.retrieve_data?.let(RetrieveDataAction.ADAPTER::redact),
        unknownFields = ByteString.EMPTY
      )
    }

    @JvmField
    public val CREATOR: Parcelable.Creator<Action> = AndroidMessage.newCreator(ADAPTER)

    private const val serialVersionUID: Long = 0L
  }
}
