// Code generated by Wire protocol buffer compiler, do not edit.
// Source: com.yunlong.particle.proto.LayoutComponent in generate/particle.proto
package com.yunlong.particle.proto

import android.os.Parcelable
import com.squareup.wire.AndroidMessage
import com.squareup.wire.FieldEncoding
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.ReverseProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import com.squareup.wire.`internal`.countNonNull
import kotlin.Any
import kotlin.AssertionError
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.DeprecationLevel
import kotlin.Int
import kotlin.Long
import kotlin.Nothing
import kotlin.String
import kotlin.Unit
import kotlin.jvm.JvmField
import okio.ByteString

/**
 *  Layout container types.
 *  HStack: a horizontal stack layout container that contains child elements
 *  VStack: a vertical stack layout container that contains child elements
 *  ZStack: a Z-axis stack layout container that contains child elements
 *  LazyColumn: a lazy column layout container that contains child elements
 *  LazyRow: a lazy row layout container that contains child elements
 *  TabView: a tab view layout container that contains child tabs
 *  NavigationView: a navigation view layout container that contains child elements
 *  NOTE: Each of the layout container types includes a repeated field called `elements` or `tabs`,
 *  which contains the child elements or tabs within the container.
 */
public class LayoutComponent(
  @field:WireField(
    tag = 1,
    adapter = "com.yunlong.particle.proto.RowComponent#ADAPTER",
    oneofName = "component",
  )
  public val row: RowComponent? = null,
  @field:WireField(
    tag = 2,
    adapter = "com.yunlong.particle.proto.ColumnComponent#ADAPTER",
    oneofName = "component",
  )
  public val column: ColumnComponent? = null,
  @field:WireField(
    tag = 3,
    adapter = "com.yunlong.particle.proto.BoxComponent#ADAPTER",
    oneofName = "component",
  )
  public val box: BoxComponent? = null,
  @field:WireField(
    tag = 4,
    adapter = "com.yunlong.particle.proto.LazyColumnComponent#ADAPTER",
    jsonName = "lazyColumn",
    oneofName = "component",
  )
  public val lazy_column: LazyColumnComponent? = null,
  @field:WireField(
    tag = 5,
    adapter = "com.yunlong.particle.proto.LazyRowComponent#ADAPTER",
    jsonName = "lazyRow",
    oneofName = "component",
  )
  public val lazy_row: LazyRowComponent? = null,
  @field:WireField(
    tag = 6,
    adapter = "com.yunlong.particle.proto.TabViewComponent#ADAPTER",
    jsonName = "tabView",
    oneofName = "component",
  )
  public val tab_view: TabViewComponent? = null,
  @field:WireField(
    tag = 7,
    adapter = "com.yunlong.particle.proto.NavigationViewComponent#ADAPTER",
    jsonName = "navigationView",
    oneofName = "component",
  )
  public val navigation_view: NavigationViewComponent? = null,
  unknownFields: ByteString = ByteString.EMPTY,
) : AndroidMessage<LayoutComponent, Nothing>(ADAPTER, unknownFields) {
  init {
    require(countNonNull(row, column, box, lazy_column, lazy_row, tab_view, navigation_view) <= 1) {
      "At most one of row, column, box, lazy_column, lazy_row, tab_view, navigation_view may be non-null"
    }
  }

  @Deprecated(
    message = "Shouldn't be used in Kotlin",
    level = DeprecationLevel.HIDDEN,
  )
  public override fun newBuilder(): Nothing = throw
      AssertionError("Builders are deprecated and only available in a javaInterop build; see https://square.github.io/wire/wire_compiler/#kotlin")

  public override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is LayoutComponent) return false
    if (unknownFields != other.unknownFields) return false
    if (row != other.row) return false
    if (column != other.column) return false
    if (box != other.box) return false
    if (lazy_column != other.lazy_column) return false
    if (lazy_row != other.lazy_row) return false
    if (tab_view != other.tab_view) return false
    if (navigation_view != other.navigation_view) return false
    return true
  }

  public override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + (row?.hashCode() ?: 0)
      result = result * 37 + (column?.hashCode() ?: 0)
      result = result * 37 + (box?.hashCode() ?: 0)
      result = result * 37 + (lazy_column?.hashCode() ?: 0)
      result = result * 37 + (lazy_row?.hashCode() ?: 0)
      result = result * 37 + (tab_view?.hashCode() ?: 0)
      result = result * 37 + (navigation_view?.hashCode() ?: 0)
      super.hashCode = result
    }
    return result
  }

  public override fun toString(): String {
    val result = mutableListOf<String>()
    if (row != null) result += """row=$row"""
    if (column != null) result += """column=$column"""
    if (box != null) result += """box=$box"""
    if (lazy_column != null) result += """lazy_column=$lazy_column"""
    if (lazy_row != null) result += """lazy_row=$lazy_row"""
    if (tab_view != null) result += """tab_view=$tab_view"""
    if (navigation_view != null) result += """navigation_view=$navigation_view"""
    return result.joinToString(prefix = "LayoutComponent{", separator = ", ", postfix = "}")
  }

  public fun copy(
    row: RowComponent? = this.row,
    column: ColumnComponent? = this.column,
    box: BoxComponent? = this.box,
    lazy_column: LazyColumnComponent? = this.lazy_column,
    lazy_row: LazyRowComponent? = this.lazy_row,
    tab_view: TabViewComponent? = this.tab_view,
    navigation_view: NavigationViewComponent? = this.navigation_view,
    unknownFields: ByteString = this.unknownFields,
  ): LayoutComponent = LayoutComponent(row, column, box, lazy_column, lazy_row, tab_view,
      navigation_view, unknownFields)

  public companion object {
    @JvmField
    public val ADAPTER: ProtoAdapter<LayoutComponent> = object : ProtoAdapter<LayoutComponent>(
      FieldEncoding.LENGTH_DELIMITED, 
      LayoutComponent::class, 
      "type.googleapis.com/com.yunlong.particle.proto.LayoutComponent", 
      PROTO_3, 
      null, 
      "generate/particle.proto"
    ) {
      public override fun encodedSize(`value`: LayoutComponent): Int {
        var size = value.unknownFields.size
        size += RowComponent.ADAPTER.encodedSizeWithTag(1, value.row)
        size += ColumnComponent.ADAPTER.encodedSizeWithTag(2, value.column)
        size += BoxComponent.ADAPTER.encodedSizeWithTag(3, value.box)
        size += LazyColumnComponent.ADAPTER.encodedSizeWithTag(4, value.lazy_column)
        size += LazyRowComponent.ADAPTER.encodedSizeWithTag(5, value.lazy_row)
        size += TabViewComponent.ADAPTER.encodedSizeWithTag(6, value.tab_view)
        size += NavigationViewComponent.ADAPTER.encodedSizeWithTag(7, value.navigation_view)
        return size
      }

      public override fun encode(writer: ProtoWriter, `value`: LayoutComponent): Unit {
        RowComponent.ADAPTER.encodeWithTag(writer, 1, value.row)
        ColumnComponent.ADAPTER.encodeWithTag(writer, 2, value.column)
        BoxComponent.ADAPTER.encodeWithTag(writer, 3, value.box)
        LazyColumnComponent.ADAPTER.encodeWithTag(writer, 4, value.lazy_column)
        LazyRowComponent.ADAPTER.encodeWithTag(writer, 5, value.lazy_row)
        TabViewComponent.ADAPTER.encodeWithTag(writer, 6, value.tab_view)
        NavigationViewComponent.ADAPTER.encodeWithTag(writer, 7, value.navigation_view)
        writer.writeBytes(value.unknownFields)
      }

      public override fun encode(writer: ReverseProtoWriter, `value`: LayoutComponent): Unit {
        writer.writeBytes(value.unknownFields)
        NavigationViewComponent.ADAPTER.encodeWithTag(writer, 7, value.navigation_view)
        TabViewComponent.ADAPTER.encodeWithTag(writer, 6, value.tab_view)
        LazyRowComponent.ADAPTER.encodeWithTag(writer, 5, value.lazy_row)
        LazyColumnComponent.ADAPTER.encodeWithTag(writer, 4, value.lazy_column)
        BoxComponent.ADAPTER.encodeWithTag(writer, 3, value.box)
        ColumnComponent.ADAPTER.encodeWithTag(writer, 2, value.column)
        RowComponent.ADAPTER.encodeWithTag(writer, 1, value.row)
      }

      public override fun decode(reader: ProtoReader): LayoutComponent {
        var row: RowComponent? = null
        var column: ColumnComponent? = null
        var box: BoxComponent? = null
        var lazy_column: LazyColumnComponent? = null
        var lazy_row: LazyRowComponent? = null
        var tab_view: TabViewComponent? = null
        var navigation_view: NavigationViewComponent? = null
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> row = RowComponent.ADAPTER.decode(reader)
            2 -> column = ColumnComponent.ADAPTER.decode(reader)
            3 -> box = BoxComponent.ADAPTER.decode(reader)
            4 -> lazy_column = LazyColumnComponent.ADAPTER.decode(reader)
            5 -> lazy_row = LazyRowComponent.ADAPTER.decode(reader)
            6 -> tab_view = TabViewComponent.ADAPTER.decode(reader)
            7 -> navigation_view = NavigationViewComponent.ADAPTER.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return LayoutComponent(
          row = row,
          column = column,
          box = box,
          lazy_column = lazy_column,
          lazy_row = lazy_row,
          tab_view = tab_view,
          navigation_view = navigation_view,
          unknownFields = unknownFields
        )
      }

      public override fun redact(`value`: LayoutComponent): LayoutComponent = value.copy(
        row = value.row?.let(RowComponent.ADAPTER::redact),
        column = value.column?.let(ColumnComponent.ADAPTER::redact),
        box = value.box?.let(BoxComponent.ADAPTER::redact),
        lazy_column = value.lazy_column?.let(LazyColumnComponent.ADAPTER::redact),
        lazy_row = value.lazy_row?.let(LazyRowComponent.ADAPTER::redact),
        tab_view = value.tab_view?.let(TabViewComponent.ADAPTER::redact),
        navigation_view = value.navigation_view?.let(NavigationViewComponent.ADAPTER::redact),
        unknownFields = ByteString.EMPTY
      )
    }

    @JvmField
    public val CREATOR: Parcelable.Creator<LayoutComponent> = AndroidMessage.newCreator(ADAPTER)

    private const val serialVersionUID: Long = 0L
  }
}
