// Code generated by Wire protocol buffer compiler, do not edit.
// Source: com.yunlong.particle.proto.NavigationComponent in generate/particle.proto
package com.yunlong.particle.proto

import android.os.Parcelable
import com.squareup.wire.AndroidMessage
import com.squareup.wire.FieldEncoding
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.ReverseProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import com.squareup.wire.`internal`.immutableCopyOf
import com.squareup.wire.`internal`.redactElements
import com.squareup.wire.`internal`.sanitize
import kotlin.Any
import kotlin.AssertionError
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.DeprecationLevel
import kotlin.Int
import kotlin.Long
import kotlin.Nothing
import kotlin.String
import kotlin.Unit
import kotlin.collections.List
import kotlin.jvm.JvmField
import okio.ByteString

public class NavigationComponent(
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
  )
  public val name: String = "",
  destinations: List<Particle> = emptyList(),
  @field:WireField(
    tag = 3,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
  )
  public val startDestination: String = "",
  unknownFields: ByteString = ByteString.EMPTY,
) : AndroidMessage<NavigationComponent, Nothing>(ADAPTER, unknownFields) {
  @field:WireField(
    tag = 2,
    adapter = "com.yunlong.particle.proto.Particle#ADAPTER",
    label = WireField.Label.REPEATED,
  )
  public val destinations: List<Particle> = immutableCopyOf("destinations", destinations)

  @Deprecated(
    message = "Shouldn't be used in Kotlin",
    level = DeprecationLevel.HIDDEN,
  )
  public override fun newBuilder(): Nothing = throw
      AssertionError("Builders are deprecated and only available in a javaInterop build; see https://square.github.io/wire/wire_compiler/#kotlin")

  public override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is NavigationComponent) return false
    if (unknownFields != other.unknownFields) return false
    if (name != other.name) return false
    if (destinations != other.destinations) return false
    if (startDestination != other.startDestination) return false
    return true
  }

  public override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + name.hashCode()
      result = result * 37 + destinations.hashCode()
      result = result * 37 + startDestination.hashCode()
      super.hashCode = result
    }
    return result
  }

  public override fun toString(): String {
    val result = mutableListOf<String>()
    result += """name=${sanitize(name)}"""
    if (destinations.isNotEmpty()) result += """destinations=$destinations"""
    result += """startDestination=${sanitize(startDestination)}"""
    return result.joinToString(prefix = "NavigationComponent{", separator = ", ", postfix = "}")
  }

  public fun copy(
    name: String = this.name,
    destinations: List<Particle> = this.destinations,
    startDestination: String = this.startDestination,
    unknownFields: ByteString = this.unknownFields,
  ): NavigationComponent = NavigationComponent(name, destinations, startDestination, unknownFields)

  public companion object {
    @JvmField
    public val ADAPTER: ProtoAdapter<NavigationComponent> = object :
        ProtoAdapter<NavigationComponent>(
      FieldEncoding.LENGTH_DELIMITED, 
      NavigationComponent::class, 
      "type.googleapis.com/com.yunlong.particle.proto.NavigationComponent", 
      PROTO_3, 
      null, 
      "generate/particle.proto"
    ) {
      public override fun encodedSize(`value`: NavigationComponent): Int {
        var size = value.unknownFields.size
        if (value.name != "") size += ProtoAdapter.STRING.encodedSizeWithTag(1, value.name)
        size += Particle.ADAPTER.asRepeated().encodedSizeWithTag(2, value.destinations)
        if (value.startDestination != "") size += ProtoAdapter.STRING.encodedSizeWithTag(3,
            value.startDestination)
        return size
      }

      public override fun encode(writer: ProtoWriter, `value`: NavigationComponent): Unit {
        if (value.name != "") ProtoAdapter.STRING.encodeWithTag(writer, 1, value.name)
        Particle.ADAPTER.asRepeated().encodeWithTag(writer, 2, value.destinations)
        if (value.startDestination != "") ProtoAdapter.STRING.encodeWithTag(writer, 3,
            value.startDestination)
        writer.writeBytes(value.unknownFields)
      }

      public override fun encode(writer: ReverseProtoWriter, `value`: NavigationComponent): Unit {
        writer.writeBytes(value.unknownFields)
        if (value.startDestination != "") ProtoAdapter.STRING.encodeWithTag(writer, 3,
            value.startDestination)
        Particle.ADAPTER.asRepeated().encodeWithTag(writer, 2, value.destinations)
        if (value.name != "") ProtoAdapter.STRING.encodeWithTag(writer, 1, value.name)
      }

      public override fun decode(reader: ProtoReader): NavigationComponent {
        var name: String = ""
        val destinations = mutableListOf<Particle>()
        var startDestination: String = ""
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> name = ProtoAdapter.STRING.decode(reader)
            2 -> destinations.add(Particle.ADAPTER.decode(reader))
            3 -> startDestination = ProtoAdapter.STRING.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return NavigationComponent(
          name = name,
          destinations = destinations,
          startDestination = startDestination,
          unknownFields = unknownFields
        )
      }

      public override fun redact(`value`: NavigationComponent): NavigationComponent = value.copy(
        destinations = value.destinations.redactElements(Particle.ADAPTER),
        unknownFields = ByteString.EMPTY
      )
    }

    @JvmField
    public val CREATOR: Parcelable.Creator<NavigationComponent> = AndroidMessage.newCreator(ADAPTER)

    private const val serialVersionUID: Long = 0L
  }
}
